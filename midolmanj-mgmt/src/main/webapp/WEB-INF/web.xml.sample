<!DOCTYPE web-app PUBLIC
 "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
 "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app>
  <display-name>Midolman Management</display-name>
  <context-param>
    <param-name>version</param-name>
    <param-value>1</param-value>
  </context-param>
    <context-param>
    <param-name>authorizer</param-name>
    <param-value>com.midokura.midolman.mgmt.auth.SimpleAuthorizer</param-value>
  </context-param>
  <context-param>
    <param-name>datastore_service</param-name>
    <param-value>com.midokura.midolman.mgmt.data.zookeeper.ZooKeeperDaoFactory</param-value>
  </context-param>
  <context-param>
    <param-name>zk_conn_string</param-name>
    <param-value>127.0.0.1:2181</param-value>
  </context-param>
  <context-param>
    <param-name>zk_timeout</param-name>
    <param-value>3000</param-value>
  </context-param>
  <context-param>
    <param-name>zk_root</param-name>
    <param-value>/midonet/v1</param-value>
  </context-param>
  <context-param>
    <param-name>cassandra-servers</param-name>
    <param-value>localhost:2181</param-value>
  </context-param>
  <!-- The following parameters should match the ones in midolman.conf
  <context-param>
    <param-name>cassandra-cluster</param-name>
    <param-value>midonet</param-value>
  </context-param>
  <context-param>
    <param-name>monitoring-cassandra_keyspace</param-name>
    <param-value>midonet_monitoring_keyspace</param-value>
  </context-param>
  <context-param>
    <param-name>monitoring-cassandra_column_family</param-name>
    <param-value>midonet_monitoring_column_family</param-value>
  </context-param>
  <context-param>
    <param-name>monitoring-cassandra_replication_factor</param-name>
    <param-value>2</param-value>
  </context-param>
  <context-param>
    <param-name>monitoring-cassandra_expiration_timeout</param-name>
    <param-value>525600</param-value>
  </context-param>
  -->
  <filter>
    <filter-name>auth</filter-name>
    <description>
      This filter authenticates the request by validating the token.
    </description>
    <filter-class>
      com.midokura.midolman.mgmt.servlet.AuthFilter
    </filter-class>
    <init-param>
      <param-name>auth_client</param-name>
      <param-value>com.midokura.midolman.mgmt.auth.keystone.KeystoneClient</param-value>
    </init-param>
    <init-param>
      <param-name>keystone_service_protocol</param-name>
      <param-value>http</param-value>
    </init-param>
    <init-param>
      <param-name>keystone_service_host</param-name>
      <param-value>127.0.0.1</param-value>
    </init-param>
    <init-param>
      <param-name>keystone_service_port</param-name>
      <param-value>35357</param-value>
    </init-param>
    <init-param>
      <param-name>keystone_admin_token</param-name>
      <param-value>999888777666</param-value>
    </init-param>
    <init-param>
      <param-name>keystone_admin_role</param-name>
      <param-value>mido_admin</param-value>
    </init-param>
    <init-param>
      <param-name>keystone_tenant_admin_role</param-name>
      <param-value>mido_tenant_admin</param-value>
    </init-param>
    <init-param>
      <param-name>keystone_tenant_user_role</param-name>
      <param-value>mido_tenant_user</param-value>
    </init-param>
  </filter>
  <filter>
    <filter-name>cors</filter-name>
    <description>
      This filter allows clients cross-origin resource sharing.
    </description>
    <filter-class>
      com.midokura.midolman.mgmt.servlet.CrossOriginResourceSharingFilter
    </filter-class>
    <init-param>
      <param-name>Access-Control-Allow-Origin</param-name>
      <param-value>*</param-value>
    </init-param>
    <init-param>
      <param-name>Access-Control-Allow-Headers</param-name>
      <param-value>Origin, X-Auth-Token, Content-Type, Accept</param-value>
    </init-param>
    <init-param>
      <param-name>Access-Control-Allow-Methods</param-name>
      <param-value>GET, POST, PUT, DELETE, OPTIONS</param-value>
    </init-param>
    <init-param>
      <param-name>Access-Control-Expose-Headers</param-name>
      <param-value>Location</param-value>
    </init-param>
  </filter>
  <!-- Filter mapping order matters.  The filters are executed in the order
       defined here. -->
  <filter-mapping>
    <filter-name>cors</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>auth</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  <servlet>
    <servlet-name>jersey_servlet</servlet-name>
    <servlet-class>
      com.sun.jersey.spi.container.servlet.ServletContainer
    </servlet-class>
    <init-param>
      <param-name>
        javax.ws.rs.Application
      </param-name>
      <param-value>
        com.midokura.midolman.mgmt.rest_api.RestApplication
      </param-value>
    </init-param>
    <init-param>
      <!-- Needed to construct proper SecurityContext used in auth -->
      <param-name>com.sun.jersey.spi.container.ContainerRequestFilters</param-name>
      <param-value>com.midokura.midolman.mgmt.auth.AuthContainerRequestFilter</param-value>
    </init-param>
    <init-param>
      <param-name>com.sun.jersey.spi.container.ContainerResponseFilters</param-name>
      <param-value>com.midokura.midolman.mgmt.rest_api.resources.ExceptionFilter</param-value>
    </init-param>
    <init-param>
      <!-- Needed for RBAC annotations -->
      <param-name>com.sun.jersey.spi.container.ResourceFilters</param-name>
      <param-value>com.sun.jersey.api.container.filter.RolesAllowedResourceFilterFactory</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>jersey_servlet</servlet-name>
    <url-pattern>/*</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>jersey_servlet</servlet-name>
    <url-pattern>/v1/*</url-pattern>
  </servlet-mapping>
</web-app>
