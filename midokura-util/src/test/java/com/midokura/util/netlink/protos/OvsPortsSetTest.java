/*
* Copyright 2012 Midokura Europe SARL
*/
package com.midokura.util.netlink.protos;

import java.util.concurrent.Future;

import org.junit.Before;
import org.junit.Test;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.MatcherAssert.assertThat;

import com.midokura.util.netlink.dp.Datapath;
import com.midokura.util.netlink.dp.Port;
import com.midokura.util.netlink.dp.Ports;
import com.midokura.util.netlink.dp.ports.InternalPort;

public class OvsPortsSetTest
    extends AbstractNetlinkProtocolTest<OvsDatapathConnection> {

    private static final Logger log = LoggerFactory
        .getLogger(OvsPortsSetTest.class);

    @Before
    public void setUp() throws Exception {
        super.setUp(responses);

        connection = OvsDatapathConnection.create(channel, reactor);
    }

    @Test
    public void testPortsSet() throws Exception {

        connection.initialize();

        // fire reply
        fireNewReply();
        fireNewReply();

        Future<Datapath> dpFuture = connection.datapathsGet("test");
        // multi containing the datapaths data
        fireNewReply();

        Datapath datapath = dpFuture.get();

        assertThat("Datapath was parsed correctly",
                   datapath, is(expectedDatapath()));

        Port expectedPort;
        Future<Port> portFuture;

        expectedPort = expectedInternalPort();
        log.info("Get the internal port by name.");
        portFuture = connection.portsGet("internalPort", null);
        fireNewReply();

        Port port = portFuture.get();
        assertThat("The returned port should match what we expected",
                   portFuture.get(), is(expectedPort));


        byte []newMac = macFromString("aa:92:26:6c:43:2c");
        port.setAddress(newMac);

        log.info("Updating port");
        portFuture = connection.portsSet(port, datapath);
        fireNewReply();

        expectedPort.setAddress(newMac);
        assertThat("The returned port should match what we expected",
                   portFuture.get(), is(expectedPort));
    }

    private Port expectedInternalPort() {
        InternalPort port =
            Ports.newInternalPort("internalPort")
                 .setPortNo(1)
                 .setAddress(macFromString("aa:92:25:6c:43:2c"));

        port.setStats(port.new Stats());
        port.setOptions(port.newOptions());

        return port;
    }

    private Datapath expectedDatapath() {
        Datapath datapath = new Datapath(28, "test");
        datapath.setStats(datapath.new Stats());

        return datapath;
    }

    final byte[][] responses = {
/*
// write - time: 1341997810872
    {
        (byte)0x28, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x10, (byte)0x00,
        (byte)0x01, (byte)0x00, (byte)0x01, (byte)0x00, (byte)0x00, (byte)0x00,
        (byte)0x9E, (byte)0x54, (byte)0x00, (byte)0x00, (byte)0x03, (byte)0x01,
        (byte)0x00, (byte)0x00, (byte)0x11, (byte)0x00, (byte)0x02, (byte)0x00,
        (byte)0x6F, (byte)0x76, (byte)0x73, (byte)0x5F, (byte)0x64, (byte)0x61,
        (byte)0x74, (byte)0x61, (byte)0x70, (byte)0x61, (byte)0x74, (byte)0x68,
        (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00
    },
*/
        // read - time: 1341997810873
        {
            (byte) 0xC0, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x10, (byte) 0x00,
            (byte) 0x00, (byte) 0x00, (byte) 0x01, (byte) 0x00, (byte) 0x00, (byte) 0x00,
            (byte) 0x9E, (byte) 0x54, (byte) 0x00, (byte) 0x00, (byte) 0x01, (byte) 0x02,
            (byte) 0x00, (byte) 0x00, (byte) 0x11, (byte) 0x00, (byte) 0x02, (byte) 0x00,
            (byte) 0x6F, (byte) 0x76, (byte) 0x73, (byte) 0x5F, (byte) 0x64, (byte) 0x61,
            (byte) 0x74, (byte) 0x61, (byte) 0x70, (byte) 0x61, (byte) 0x74, (byte) 0x68,
            (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x06, (byte) 0x00,
            (byte) 0x01, (byte) 0x00, (byte) 0x18, (byte) 0x00, (byte) 0x00, (byte) 0x00,
            (byte) 0x08, (byte) 0x00, (byte) 0x03, (byte) 0x00, (byte) 0x01, (byte) 0x00,
            (byte) 0x00, (byte) 0x00, (byte) 0x08, (byte) 0x00, (byte) 0x04, (byte) 0x00,
            (byte) 0x04, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x08, (byte) 0x00,
            (byte) 0x05, (byte) 0x00, (byte) 0x03, (byte) 0x00, (byte) 0x00, (byte) 0x00,
            (byte) 0x54, (byte) 0x00, (byte) 0x06, (byte) 0x00, (byte) 0x14, (byte) 0x00,
            (byte) 0x01, (byte) 0x00, (byte) 0x08, (byte) 0x00, (byte) 0x01, (byte) 0x00,
            (byte) 0x01, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x08, (byte) 0x00,
            (byte) 0x02, (byte) 0x00, (byte) 0x0B, (byte) 0x00, (byte) 0x00, (byte) 0x00,
            (byte) 0x14, (byte) 0x00, (byte) 0x02, (byte) 0x00, (byte) 0x08, (byte) 0x00,
            (byte) 0x01, (byte) 0x00, (byte) 0x02, (byte) 0x00, (byte) 0x00, (byte) 0x00,
            (byte) 0x08, (byte) 0x00, (byte) 0x02, (byte) 0x00, (byte) 0x0B, (byte) 0x00,
            (byte) 0x00, (byte) 0x00, (byte) 0x14, (byte) 0x00, (byte) 0x03, (byte) 0x00,
            (byte) 0x08, (byte) 0x00, (byte) 0x01, (byte) 0x00, (byte) 0x03, (byte) 0x00,
            (byte) 0x00, (byte) 0x00, (byte) 0x08, (byte) 0x00, (byte) 0x02, (byte) 0x00,
            (byte) 0x0E, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x14, (byte) 0x00,
            (byte) 0x04, (byte) 0x00, (byte) 0x08, (byte) 0x00, (byte) 0x01, (byte) 0x00,
            (byte) 0x04, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x08, (byte) 0x00,
            (byte) 0x02, (byte) 0x00, (byte) 0x0B, (byte) 0x00, (byte) 0x00, (byte) 0x00,
            (byte) 0x24, (byte) 0x00, (byte) 0x07, (byte) 0x00, (byte) 0x20, (byte) 0x00,
            (byte) 0x01, (byte) 0x00, (byte) 0x08, (byte) 0x00, (byte) 0x02, (byte) 0x00,
            (byte) 0x03, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x11, (byte) 0x00,
            (byte) 0x01, (byte) 0x00, (byte) 0x6F, (byte) 0x76, (byte) 0x73, (byte) 0x5F,
            (byte) 0x64, (byte) 0x61, (byte) 0x74, (byte) 0x61, (byte) 0x70, (byte) 0x61,
            (byte) 0x74, (byte) 0x68, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00
        },
/*
// write - time: 1341997810889
    {
        (byte)0x24, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x10, (byte)0x00,
        (byte)0x01, (byte)0x00, (byte)0x02, (byte)0x00, (byte)0x00, (byte)0x00,
        (byte)0x9E, (byte)0x54, (byte)0x00, (byte)0x00, (byte)0x03, (byte)0x01,
        (byte)0x00, (byte)0x00, (byte)0x0E, (byte)0x00, (byte)0x02, (byte)0x00,
        (byte)0x6F, (byte)0x76, (byte)0x73, (byte)0x5F, (byte)0x76, (byte)0x70,
        (byte)0x6F, (byte)0x72, (byte)0x74, (byte)0x00, (byte)0x00, (byte)0x00
    },
*/
        // read - time: 1341997810890
        {
            (byte) 0xB8, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x10, (byte) 0x00,
            (byte) 0x00, (byte) 0x00, (byte) 0x02, (byte) 0x00, (byte) 0x00, (byte) 0x00,
            (byte) 0x9E, (byte) 0x54, (byte) 0x00, (byte) 0x00, (byte) 0x01, (byte) 0x02,
            (byte) 0x00, (byte) 0x00, (byte) 0x0E, (byte) 0x00, (byte) 0x02, (byte) 0x00,
            (byte) 0x6F, (byte) 0x76, (byte) 0x73, (byte) 0x5F, (byte) 0x76, (byte) 0x70,
            (byte) 0x6F, (byte) 0x72, (byte) 0x74, (byte) 0x00, (byte) 0x00, (byte) 0x00,
            (byte) 0x06, (byte) 0x00, (byte) 0x01, (byte) 0x00, (byte) 0x19, (byte) 0x00,
            (byte) 0x00, (byte) 0x00, (byte) 0x08, (byte) 0x00, (byte) 0x03, (byte) 0x00,
            (byte) 0x01, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x08, (byte) 0x00,
            (byte) 0x04, (byte) 0x00, (byte) 0x04, (byte) 0x00, (byte) 0x00, (byte) 0x00,
            (byte) 0x08, (byte) 0x00, (byte) 0x05, (byte) 0x00, (byte) 0x64, (byte) 0x00,
            (byte) 0x00, (byte) 0x00, (byte) 0x54, (byte) 0x00, (byte) 0x06, (byte) 0x00,
            (byte) 0x14, (byte) 0x00, (byte) 0x01, (byte) 0x00, (byte) 0x08, (byte) 0x00,
            (byte) 0x01, (byte) 0x00, (byte) 0x01, (byte) 0x00, (byte) 0x00, (byte) 0x00,
            (byte) 0x08, (byte) 0x00, (byte) 0x02, (byte) 0x00, (byte) 0x0B, (byte) 0x00,
            (byte) 0x00, (byte) 0x00, (byte) 0x14, (byte) 0x00, (byte) 0x02, (byte) 0x00,
            (byte) 0x08, (byte) 0x00, (byte) 0x01, (byte) 0x00, (byte) 0x02, (byte) 0x00,
            (byte) 0x00, (byte) 0x00, (byte) 0x08, (byte) 0x00, (byte) 0x02, (byte) 0x00,
            (byte) 0x0B, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x14, (byte) 0x00,
            (byte) 0x03, (byte) 0x00, (byte) 0x08, (byte) 0x00, (byte) 0x01, (byte) 0x00,
            (byte) 0x03, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x08, (byte) 0x00,
            (byte) 0x02, (byte) 0x00, (byte) 0x0E, (byte) 0x00, (byte) 0x00, (byte) 0x00,
            (byte) 0x14, (byte) 0x00, (byte) 0x04, (byte) 0x00, (byte) 0x08, (byte) 0x00,
            (byte) 0x01, (byte) 0x00, (byte) 0x04, (byte) 0x00, (byte) 0x00, (byte) 0x00,
            (byte) 0x08, (byte) 0x00, (byte) 0x02, (byte) 0x00, (byte) 0x0B, (byte) 0x00,
            (byte) 0x00, (byte) 0x00, (byte) 0x20, (byte) 0x00, (byte) 0x07, (byte) 0x00,
            (byte) 0x1C, (byte) 0x00, (byte) 0x01, (byte) 0x00, (byte) 0x08, (byte) 0x00,
            (byte) 0x02, (byte) 0x00, (byte) 0x04, (byte) 0x00, (byte) 0x00, (byte) 0x00,
            (byte) 0x0E, (byte) 0x00, (byte) 0x01, (byte) 0x00, (byte) 0x6F, (byte) 0x76,
            (byte) 0x73, (byte) 0x5F, (byte) 0x76, (byte) 0x70, (byte) 0x6F, (byte) 0x72,
            (byte) 0x74, (byte) 0x00, (byte) 0x00, (byte) 0x00
        },
/*
// write - time: 1341997810953
    {
        (byte)0x24, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x18, (byte)0x00,
        (byte)0x09, (byte)0x00, (byte)0x03, (byte)0x00, (byte)0x00, (byte)0x00,
        (byte)0x9E, (byte)0x54, (byte)0x00, (byte)0x00, (byte)0x03, (byte)0x01,
        (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
        (byte)0x09, (byte)0x00, (byte)0x01, (byte)0x00, (byte)0x74, (byte)0x65,
        (byte)0x73, (byte)0x74, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00
    },
*/
        // read - time: 1341997810954
        {
            (byte) 0x48, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x18, (byte) 0x00,
            (byte) 0x00, (byte) 0x00, (byte) 0x03, (byte) 0x00, (byte) 0x00, (byte) 0x00,
            (byte) 0x9E, (byte) 0x54, (byte) 0x00, (byte) 0x00, (byte) 0x01, (byte) 0x01,
            (byte) 0x00, (byte) 0x00, (byte) 0x1C, (byte) 0x00, (byte) 0x00, (byte) 0x00,
            (byte) 0x09, (byte) 0x00, (byte) 0x01, (byte) 0x00, (byte) 0x74, (byte) 0x65,
            (byte) 0x73, (byte) 0x74, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
            (byte) 0x24, (byte) 0x00, (byte) 0x03, (byte) 0x00, (byte) 0x00, (byte) 0x00,
            (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
            (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
            (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
            (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
            (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00
        },
/*
// write - time: 1341997810957
    {
        (byte)0x34, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x19, (byte)0x00,
        (byte)0x09, (byte)0x00, (byte)0x04, (byte)0x00, (byte)0x00, (byte)0x00,
        (byte)0x9E, (byte)0x54, (byte)0x00, (byte)0x00, (byte)0x03, (byte)0x01,
        (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
        (byte)0x08, (byte)0x00, (byte)0x05, (byte)0x00, (byte)0x9E, (byte)0x54,
        (byte)0x00, (byte)0x00, (byte)0x11, (byte)0x00, (byte)0x03, (byte)0x00,
        (byte)0x69, (byte)0x6E, (byte)0x74, (byte)0x65, (byte)0x72, (byte)0x6E,
        (byte)0x61, (byte)0x6C, (byte)0x50, (byte)0x6F, (byte)0x72, (byte)0x74,
        (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00
    },
*/
        // read - time: 1341997810957
        {
            (byte) 0x98, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x19, (byte) 0x00,
            (byte) 0x00, (byte) 0x00, (byte) 0x04, (byte) 0x00, (byte) 0x00, (byte) 0x00,
            (byte) 0x9E, (byte) 0x54, (byte) 0x00, (byte) 0x00, (byte) 0x01, (byte) 0x01,
            (byte) 0x00, (byte) 0x00, (byte) 0x1C, (byte) 0x00, (byte) 0x00, (byte) 0x00,
            (byte) 0x08, (byte) 0x00, (byte) 0x01, (byte) 0x00, (byte) 0x01, (byte) 0x00,
            (byte) 0x00, (byte) 0x00, (byte) 0x08, (byte) 0x00, (byte) 0x02, (byte) 0x00,
            (byte) 0x02, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x11, (byte) 0x00,
            (byte) 0x03, (byte) 0x00, (byte) 0x69, (byte) 0x6E, (byte) 0x74, (byte) 0x65,
            (byte) 0x72, (byte) 0x6E, (byte) 0x61, (byte) 0x6C, (byte) 0x50, (byte) 0x6F,
            (byte) 0x72, (byte) 0x74, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
            (byte) 0x08, (byte) 0x00, (byte) 0x05, (byte) 0x00, (byte) 0x83, (byte) 0x49,
            (byte) 0x00, (byte) 0x00, (byte) 0x44, (byte) 0x00, (byte) 0x06, (byte) 0x00,
            (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
            (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
            (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
            (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
            (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
            (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
            (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
            (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
            (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
            (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
            (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x0A, (byte) 0x00,
            (byte) 0x64, (byte) 0x00, (byte) 0xAA, (byte) 0x92, (byte) 0x25, (byte) 0x6C,
            (byte) 0x43, (byte) 0x2C, (byte) 0x00, (byte) 0x00, (byte) 0x04, (byte) 0x00,
            (byte) 0x04, (byte) 0x00
        },
/*
// write - time: 1341997810978
    {
        (byte)0x96, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x19, (byte)0x00,
        (byte)0x09, (byte)0x00, (byte)0x05, (byte)0x00, (byte)0x00, (byte)0x00,
        (byte)0x9E, (byte)0x54, (byte)0x00, (byte)0x00, (byte)0x04, (byte)0x01,
        (byte)0x00, (byte)0x00, (byte)0x1C, (byte)0x00, (byte)0x00, (byte)0x00,
        (byte)0x08, (byte)0x00, (byte)0x05, (byte)0x00, (byte)0x9E, (byte)0x54,
        (byte)0x00, (byte)0x00, (byte)0x11, (byte)0x00, (byte)0x03, (byte)0x00,
        (byte)0x69, (byte)0x6E, (byte)0x74, (byte)0x65, (byte)0x72, (byte)0x6E,
        (byte)0x61, (byte)0x6C, (byte)0x50, (byte)0x6F, (byte)0x72, (byte)0x74,
        (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x08, (byte)0x00,
        (byte)0x01, (byte)0x00, (byte)0x01, (byte)0x00, (byte)0x00, (byte)0x00,
        (byte)0x08, (byte)0x00, (byte)0x02, (byte)0x00, (byte)0x02, (byte)0x00,
        (byte)0x00, (byte)0x00, (byte)0x0A, (byte)0x00, (byte)0x64, (byte)0x00,
        (byte)0xAA, (byte)0x92, (byte)0x26, (byte)0x6C, (byte)0x43, (byte)0x2C,
        (byte)0x04, (byte)0x00, (byte)0x04, (byte)0x00, (byte)0x44, (byte)0x00,
        (byte)0x06, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
        (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
        (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
        (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
        (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
        (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
        (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
        (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
        (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
        (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00,
        (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00, (byte)0x00
    },
*/
        // read - time: 1341997810978
        {
            (byte) 0x98, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x19, (byte) 0x00,
            (byte) 0x00, (byte) 0x00, (byte) 0x05, (byte) 0x00, (byte) 0x00, (byte) 0x00,
            (byte) 0x9E, (byte) 0x54, (byte) 0x00, (byte) 0x00, (byte) 0x01, (byte) 0x01,
            (byte) 0x00, (byte) 0x00, (byte) 0x1C, (byte) 0x00, (byte) 0x00, (byte) 0x00,
            (byte) 0x08, (byte) 0x00, (byte) 0x01, (byte) 0x00, (byte) 0x01, (byte) 0x00,
            (byte) 0x00, (byte) 0x00, (byte) 0x08, (byte) 0x00, (byte) 0x02, (byte) 0x00,
            (byte) 0x02, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x11, (byte) 0x00,
            (byte) 0x03, (byte) 0x00, (byte) 0x69, (byte) 0x6E, (byte) 0x74, (byte) 0x65,
            (byte) 0x72, (byte) 0x6E, (byte) 0x61, (byte) 0x6C, (byte) 0x50, (byte) 0x6F,
            (byte) 0x72, (byte) 0x74, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
            (byte) 0x08, (byte) 0x00, (byte) 0x05, (byte) 0x00, (byte) 0x9E, (byte) 0x54,
            (byte) 0x00, (byte) 0x00, (byte) 0x44, (byte) 0x00, (byte) 0x06, (byte) 0x00,
            (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
            (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
            (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
            (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
            (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
            (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
            (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
            (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
            (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
            (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
            (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x0A, (byte) 0x00,
            (byte) 0x64, (byte) 0x00, (byte) 0xAA, (byte) 0x92, (byte) 0x26, (byte) 0x6C,
            (byte) 0x43, (byte) 0x2C, (byte) 0x00, (byte) 0x00, (byte) 0x04, (byte) 0x00,
            (byte) 0x04, (byte) 0x00
        },
    };
}
